$(document).ready(function(){function e(e){var t=200*parseFloat(e.css("transitionDuration"));setTimeout(function(){e.addClass("hidden")},t+1)}$(window).scroll(function(){var e=$(document).scrollTop();e>20?$(".header").addClass("fixed"):$(".header").removeClass("fixed")}),$(".nav__text-style").click(function(){var e=$(this).attr("href");return 0!=$(e).length&&$("html, body").animate({scrollTop:$(e).offset().top},700),document.location=e,!1}),$(".open_gallery").click(function(){var e=$(this).data("src"),t=($(this).data("fotoarr"),$(document).scrollTop()),o=$(this).siblings("h3").text(),n=$(this).siblings(".result__wed-name").text();$("#pop_gallery h3").text(o),$("#pop_gallery p").text(n),$("#pop_gallery .pop_foto").html("");for(var a=0;a<=e.length&&a<=20;)a++,$("#pop_gallery .pop_foto").append('<img src=" '+e+a+'res.jpg" alt="">');return $("#overlay").fadeIn(200,function(){var e=$("#pop_gallery");e.removeClass("hidden").css("top",t+95),setTimeout(function(){e.addClass("opened")},50)}),!1}),$("#overlay, .close").click(function(){e($(".opened")),$(".opened").removeClass("opened"),$("#overlay").fadeOut()}),$(".more-results").click(function(){var e=$(this);return e.slideUp(),e.siblings(".hidden").slideDown(),!1}),$(".open").click(function(e){var t=$(this).data("info");e.preventDefault(),$("#overlay").fadeIn(200,function(){var e=$(".pop_form");e.removeClass("hidden"),setTimeout(function(){e.addClass("opened").find("input.info").val(t)},50)})}),$(".list-text").each(function(e){function t(){e%2?o.addClass(n):o.addClass(a)}var o=$(this),n="translateLeft400",a="translateRight400";t(),$(o).waypoint(function(e){"down"===e?o.removeClass(n).removeClass(a):t()},{offset:"70%"}),$(o).waypoint(function(e){"down"===e?t():o.removeClass(n).removeClass(a)},{offset:-70})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
